services:
  api-spring:
    build: .
    container_name: charfinder-api-spring
    ports:
      - "5000:8080"   # host:container
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATA_MONGODB_URI: ${SPRING_DATA_MONGODB_URI_DOCKER}
      ELASTICSEARCH_USERNAME: ${ELASTICSEARCH_USERNAME}
      ELASTICSEARCH_PASSWORD: ${ELASTICSEARCH_PASSWORD}
      SPRING_SECURITY_USERNAME: ${SPRING_SECURITY_USERNAME}
      SPRING_SECURITY_PASSWORD: ${SPRING_SECURITY_PASSWORD}
    depends_on:
      - auth-postgres
      - rules-mongodb
    networks:
      - backend

  auth-postgres:
    image: postgres:18
    container_name: charfinder-postgres-auth-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"   # expose on 5433 to avoid conflict
    volumes:
      - charfinder_auth_data:/var/lib/postgresql/data
    networks:
      - backend

  rules-mongodb:
    image: mongo:8
    container_name: charfinder-rules-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - "27017:27017"
    volumes:
      - rule_data:/data/db
      - ./init-mongo:/docker-entrypoint-initdb.d  # ‚Üê Auto-runs 01-import.sh ONCE
    healthcheck:
      test: [ "CMD", "mongosh", "--username", "rootuser", "--password", "rootpass", "--authenticationDatabase", "admin", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  mongo-express:
    image: mongo-express:1.0.2-20-alpine3.19
    container_name: charfinder-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
      ME_CONFIG_MONGODB_URL: ${ME_CONFIG_MONGODB_URL}
    depends_on:
      rules-mongodb:
        condition: service_started
    networks:
      - backend

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.4
    container_name: charfinder-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: [ "CMD-SHELL", "curl -u elastic:elasticpass -s http://localhost:9200/_cluster/health || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.4
    container_name: charfinder-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy

networks:
  backend:
    driver: bridge

volumes:
  rule_data:
  charfinder_auth_data:
  esdata: